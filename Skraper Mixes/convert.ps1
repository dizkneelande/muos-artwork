# This script will ingest an EmulationStation XML Generated by Skraper
# and extract the Description for use with muOS
# It can ingest multiple XML files and reads them from whatever 
# directory this script is run from

# Grab all XML files from current dir
$xmlFiles = Get-ChildItem -Path $PSScriptRoot -Filter *.xml

#Set Output INFO path
# This will out put the Metadata text file in a muOS compliant way
# Replace this with the output folder you'd prefer
$muosInfo = "C:\Users\nell\Documents\cfw\rg35xxsp\muOS-Artwork-main\muOS-Artwork-main\Skraper Mixes\text"

# Legacy Text from older muOS versions
# $descText = "# Description of the game or content."
# $kindText = "# The genre of the game separated by commas."
# $timeText = "# Timestamp of last played - This is updated dynamically.`r`nlast="
# $coreText = "# The specific RetroArch core used, this can be any file in the CORE directory.`r`n# Leave it as 'detect' to have it run based on the default core in the 'core.txt' file.`r`ncore=detect"
# $modeText = "# The cpu governor that will be used. Can be one of the following:`r`n# 	interactive performance powersave userspace`r`n# Leave it as 'detect' to use the default which is 'interactive'`r`nmode=performance"

# Load the XML file
foreach ($xmlFile in $xmlFiles) {
    # Extract the system name from the file path
    # This will put things in the muOS directory strucure using the XML filename
    # as the muOS directory name
    # i.e if your ROMs are saved as /ROMS/Gameboy/ name the XMl Gameboy.xml
    $systemName = [System.IO.Path]::GetFileNameWithoutExtension($xmlFile.Name)
    #Write-Host $systemName
    [xml]$xml = Get-Content $xmlFile

    foreach ($game in $xml.SelectNodes("//game")) {
        $gamePath = $game.SelectSingleNode("path").InnerText
        $gameDesc = $game.SelectSingleNode("desc").InnerText #-replace "`r|`n", " " # Early versions stripped linebreaks
        $gameGenre = $game.SelectSingleNode("genre").InnerText

        # Extracting filename from the path
        # This ensures the metadata get's the correct name /INFO/content/System/meta/filename.txt
        $fileName = [System.IO.Path]::GetFileNameWithoutExtension($gamePath)
    
        # Created the files!
        $outputFolderPath = "$muosInfo\content\$systemName\meta\"
        $outputFilePath = Join-Path -Path $outputFolderPath -ChildPath "$fileName.txt"

        # Create the directories if needed
        if (-not (Test-Path -LiteralPath $outputFolderPath)) {
            New-Item -ItemType Directory -Path $outputFolderPath | Out-Null
        }
        #$content = "$descText`r`ndesc=$gameDesc`r`n`r`n$kindText`r`nkind=$gameGenre`r`n`r`n$timeText`r`n`r`n$coreText`r`n`r`n$modeText"
        $content = $gameDesc
        Write-Host "Writing $outputFilePath"
        Set-Content -LiteralPath $outputFilePath -Value $content
    }
}